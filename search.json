[{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"How to contribute","title":"How to contribute","text":"’m glad ’re reading still learning collaborate. Thank joining journey. important resources: - basic idea behind neutralisation assays Ferrara Temperton, Methods Protoc. 2018 - Extremely helpful basics submit PR Fireship.","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/CONTRIBUTING.html","id":"submitting-changes","dir":"","previous_headings":"","what":"Submitting changes","title":"How to contribute","text":"Please send GitHub Pull Request NormaliseForIC50 clear list ’ve done (read pull requests). send pull request, love forever include unittest using testthat. can always use test coverage. Please follow coding conventions () make sure commits atomic (one feature per commit). Always write clear log message commits. One-line messages fine small changes, bigger changes look like : $ git commit -m “brief summary commit > > paragraph describing changed impact.”","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/CONTRIBUTING.html","id":"coding-conventions","dir":"","previous_headings":"","what":"Coding conventions","title":"How to contribute","text":"Start reading code ’ll get hang . optimize readability: Name files, functions, variables sensibly. Guide Hadley Wickham robot end another room, run wall different interior designs. (user’s computer share file structure ) wise let people know interior design house (file system). Examples can found use ::.Rmd, nice ode. ALWAYS put spaces list items method parameters ([1, 2, 3], [1,2,3]), around operators (x += 1, x+=1), around hash arrows. open-source software. Consider people read code, make look nice . ’s like driving car: Perhaps love donuts ’re alone, passengers, goal make ride smooth possible. Thanks, Mark TK Cheng Visiting Researcher CITIID Student Doctor University Cambridge contributing guideline heavily based Open Government’s contributing guidelines.","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 NormaliseForIC50 authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/articles/How_to_integrate_a_platemap.html","id":"load-the-librarypackage-from-github-","dir":"Articles","previous_headings":"","what":"load the library/package from github.","title":"Generate + integrate a platemap and group results.","text":"","code":"if(!require(\"remotes\"))install.packages(\"remotes\",repos=\"http://cran.us.r-project.org\") ## Loading required package: remotes ## Warning in library(package, lib.loc = lib.loc, character.only = TRUE, ## logical.return = TRUE, : there is no package called 'remotes' ## Installing package into '/home/runner/work/_temp/Library' ## (as 'lib' is unspecified) if(!require(\"NormaliseForIC50\"))remotes::install_github(\"TKMarkCheng/NormaliseForIC50\",dependencies = TRUE, force = TRUE) ## Loading required package: NormaliseForIC50 library(dplyr) ##  ## Attaching package: 'dplyr' ## The following objects are masked from 'package:stats': ##  ##     filter, lag ## The following objects are masked from 'package:base': ##  ##     intersect, setdiff, setequal, union options(scipen = 999) # do not use scientific notation"},{"path":[]},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/articles/How_to_integrate_a_platemap.html","id":"step1-loading-sample-defining-output-file-","dir":"Articles","previous_headings":"Reading in or generating the platemap","what":"STEP1: Loading sample, defining output file.","title":"Generate + integrate a platemap and group results.","text":"","code":"search_folder = \"Validation/\" #CHANGE this to the folder containing all your input .xlsx data files input_directory = paste0(here::here(search_folder),\"/\") output_generated_plateMap_file <- here::here(\"Validation/validation_output/example_generated_platemap.xlsx\") # CHANGE directory and name for yourself"},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/articles/How_to_integrate_a_platemap.html","id":"step2-generate-platemap-based-on-the-files-in-the-specified-directory-","dir":"Articles","previous_headings":"Reading in or generating the platemap","what":"STEP2: Generate platemap based on the files in the specified directory.","title":"Generate + integrate a platemap and group results.","text":"function fixes missing columns, also finds promega_plate_path searching Plate_Name given. need make sure plate names unique. can choose write excel file manually add values. can feed pre-made excel file.","code":"example_generated_plate_map <- NormaliseForIC50::generate_plate_map(input_directory,output_mode = \"return\") ## A total of 15 promega data plates are found out of 27 excel files in the directory /home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation//. ## Warning: There were 2 warnings in `dplyr::mutate()`. ## The first warning was: ## ℹ In argument: `file_creation_date = get_read_date(promega_plate_path)`. ## ℹ In row 11. ## Caused by warning in `as.Date()`: ## ! NAs introduced by coercion ## ℹ Run `dplyr::last_dplyr_warnings()` to see the 1 remaining warning. head(example_generated_plate_map) ##   Group Negative_Control_Column Positive_Control_Column Individual_condition ## 1    NA                       1                       2                   NA ## 2    NA                       1                       2                   NA ## 3    NA                       1                       2                   NA ## 4    NA                       1                       2                   NA ## 5    NA                       1                       2                   NA ## 6    NA                       1                       2                   NA ##   Virus Plate Plate_Name Well dilution_or_concentration ## 1    NA    NA   example1   A3                  dilution ## 2    NA    NA example1kc   A3                  dilution ## 3    NA    NA   example1   A4                  dilution ## 4    NA    NA example1kc   A4                  dilution ## 5    NA    NA   example1   A5                  dilution ## 6    NA    NA example1kc   A5                  dilution ##   Starting_Dilution_or_concentration dilution_series ## 1                                 20          1 in 3 ## 2                                 20          1 in 3 ## 3                                 20          1 in 3 ## 4                                 20          1 in 3 ## 5                                 20          1 in 3 ## 6                                 20          1 in 3 ##                                                                                   promega_plate_path ## 1    /home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation///2022-09-04_reads/example1.xlsx ## 2 /home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation///anomaly_detection/example1kc.xlsx ## 3    /home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation///2022-09-04_reads/example1.xlsx ## 4 /home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation///anomaly_detection/example1kc.xlsx ## 5    /home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation///2022-09-04_reads/example1.xlsx ## 6 /home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation///anomaly_detection/example1kc.xlsx ##   file_creation_date column ## 1         2022-09-04      3 ## 2               <NA>      3 ## 3         2022-09-04      4 ## 4               <NA>      4 ## 5         2022-09-04      5 ## 6               <NA>      5"},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/articles/How_to_integrate_a_platemap.html","id":"step3-manual-correction-of-list","dir":"Articles","previous_headings":"Reading in or generating the platemap","what":"STEP3: Manual correction of list","title":"Generate + integrate a platemap and group results.","text":"","code":"#NormaliseForIC50::generate_plate_map(input_directory,output_mode = \"write\",output_plateMap_file = output_generated_plateMap_file) ## manual correction/filling, making a new file as below platemap <- readxl::read_excel(path=\"../Validation/validation_output/example_generated_platemap_manual_changes.xlsx\") platemap ## # A tibble: 124 × 14 ##    Group Negative_Control_Column Positive_Control_Column Individual_condition ##    <chr>                   <dbl>                   <dbl> <chr>                ##  1 sera                        1                       2 patient1             ##  2 sera                        1                       2 patient1             ##  3 sera                        1                       2 patient2             ##  4 sera                        1                       2 patient2             ##  5 sera                        1                       2 patient3             ##  6 sera                        1                       2 patient3             ##  7 sera                        1                       2 patient4             ##  8 sera                        1                       2 patient4             ##  9 sera                        1                       2 patient5             ## 10 sera                        1                       2 patient5             ## # ℹ 114 more rows ## # ℹ 10 more variables: Virus <chr>, Plate <lgl>, Plate_Name <chr>, Well <chr>, ## #   dilution_or_concentration <chr>, Starting_Dilution_or_concentration <dbl>, ## #   dilution_series <chr>, promega_plate_path <chr>, file_creation_date <dttm>, ## #   column <chr>"},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/articles/How_to_integrate_a_platemap.html","id":"using-the-platemap---query-normalise-and-merge","dir":"Articles","previous_headings":"","what":"using the platemap - query, normalise, and merge","title":"Generate + integrate a platemap and group results.","text":"get collated sheet normalised values plates columns described plate map.","code":"df_list <- list() for (each_plate_name in unique(platemap$Plate_Name)){   print(each_plate_name)   individual_platemap <- platemap %>% dplyr::filter(Plate_Name == each_plate_name)   plate_normalised <- NormaliseForIC50::normalise_plate_using_plateMap(individual_platemap)   #plate_normalised <- cbind(plate_name=each_plate_name,plate_normalised)   df_list[[each_plate_name]] <- plate_normalised } ## [1] \"example1\" ## negative control = 83.75 ## positive control = 299325 ## negative control = 83.75 ## positive control = 299325 ## negative control = 83.75 ## positive control = 299325 ## negative control = 83.75 ## positive control = 299325 ## negative control = 83.75 ## positive control = 299325 ## [1] \"example2\" ## negative control = 96.25 ## positive control = 361825 ## negative control = 96.25 ## positive control = 361825 ## negative control = 96.25 ## positive control = 361825 ## negative control = 96.25 ## positive control = 361825 ## negative control = 96.25 ## positive control = 361825 ## [1] \"example3\" ## negative control = 96.25 ## positive control = 354575 ## negative control = 96.25 ## positive control = 354575 ## negative control = 96.25 ## positive control = 354575 ## negative control = 96.25 ## positive control = 354575 ## negative control = 96.25 ## positive control = 354575 ## [1] \"example4\" ## negative control = 93.75 ## positive control = 363150 ## negative control = 93.75 ## positive control = 363150 ## negative control = 93.75 ## positive control = 363150 ## negative control = 93.75 ## positive control = 363150 ## negative control = 93.75 ## positive control = 363150 ## [1] \"example5\" ## negative control = 91.25 ## positive control = 370775 ## negative control = 91.25 ## positive control = 370775 ## negative control = 91.25 ## positive control = 370775 ## negative control = 91.25 ## positive control = 370775 ## negative control = 91.25 ## positive control = 370775 ## [1] \"example6\" ## negative control = 87.5 ## positive control = 351112.5 ## negative control = 87.5 ## positive control = 351112.5 ## negative control = 87.5 ## positive control = 351112.5 ## negative control = 87.5 ## positive control = 351112.5 ## negative control = 87.5 ## positive control = 351112.5 ## [1] \"example7\" ## negative control = 92.5 ## positive control = 393425 ## negative control = 92.5 ## positive control = 393425 ## negative control = 92.5 ## positive control = 393425 ## negative control = 92.5 ## positive control = 393425 ## negative control = 92.5 ## positive control = 393425 ## [1] \"example8\" ## negative control = 101.25 ## positive control = 381600 ## negative control = 101.25 ## positive control = 381600 ## negative control = 101.25 ## positive control = 381600 ## negative control = 101.25 ## positive control = 381600 ## negative control = 101.25 ## positive control = 381600 ## [1] \"example9\" ## negative control = 91.25 ## positive control = 385575 ## negative control = 91.25 ## positive control = 385575 ## negative control = 91.25 ## positive control = 385575 ## negative control = 91.25 ## positive control = 385575 ## negative control = 91.25 ## positive control = 385575 ## [1] \"example10\" ## negative control = 77.5 ## positive control = 361125 ## negative control = 77.5 ## positive control = 361125 ## negative control = 77.5 ## positive control = 361125 ## negative control = 77.5 ## positive control = 361125 ## negative control = 77.5 ## positive control = 361125 ## [1] \"Inhib1_Inhib2_Vir1Vir2\" ## negative control = 30 ## positive control = 269387.5 ## negative control = 30 ## positive control = 269387.5 ## negative control = 42.5 ## positive control = 473787.5 ## negative control = 42.5 ## positive control = 473787.5 ## [1] \"Inhib1_Inhib2_Vir3Vir4\" ## negative control = 62.5 ## positive control = 371925 ## negative control = 62.5 ## positive control = 371925 ## negative control = 41.25 ## positive control = 290600 ## negative control = 41.25 ## positive control = 290600 ## [1] \"Inhib1_Inhib2_Vir5Vir6\" ## negative control = 16.25 ## positive control = 266337.5 ## negative control = 16.25 ## positive control = 266337.5 ## negative control = 28.75 ## positive control = 200875 ## negative control = 28.75 ## positive control = 200875 merge_cols = c(\"Group\",\"dilution_or_concentration\",\"dilution_serie\") plates_merged <- Reduce(function (x,y) merge(x,y,by=merge_cols, all = TRUE),df_list) %>% dplyr::arrange(across(all_of(merge_cols)))  print(glue::glue(\"{dim(plates_merged)[2] -3} different unique experiment conditions.\")) ## 124 different unique experiment conditions."},{"path":[]},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/articles/How_to_integrate_a_platemap.html","id":"filtering","dir":"Articles","previous_headings":"filtering and grouping by virus or condition of interest","what":"filtering","title":"Generate + integrate a platemap and group results.","text":"","code":"# if you want to pick by specific conditions or viruses filter_by_condition = NULL filter_by_virus = c(\"Virus1\",\"VIrus2\")  plates_merged_filter <- NormaliseForIC50::filter_merged(plates_merged,condition=filter_by_condition,virus = filter_by_virus)  openxlsx::write.xlsx(plates_merged_filter,            here::here(paste0(              \"Validation/validation_output/PlatesMerged\",              \"_\",(if (!is.null(filter_by_condition)) paste(filter_by_condition,collapse='-') else 'AllCondition'),              \"_\",(if (!is.null(filter_by_virus)) paste(filter_by_virus,collapse='-') else 'AllVirus'),              \".xlsx\"))            )"},{"path":[]},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/articles/How_to_integrate_a_platemap.html","id":"grouping-by-virus","dir":"Articles","previous_headings":"filtering and grouping by virus or condition of interest > Grouping","what":"Grouping by virus","title":"Generate + integrate a platemap and group results.","text":"Alternatively, can group virus individual condition generate sheets per virus individual condition.","code":"#groupby viruses output_file_groupby_virus <- here::here(\"Validation/validation_output/PlatesMerged_Grouped_by_virus.xlsx\")  library(openxlsx) wb<-createWorkbook() virues <- unique(platemap$Virus) for (virus in virues){   plates_merged_filter <- NormaliseForIC50::filter_merged(plates_merged,virus = virus)   sheetName=virus   addWorksheet(wb,sheetName=sheetName)   writeData(wb, sheet = sheetName,             x=plates_merged_filter)   print(glue::glue(\"data for virus:{virus} calculated, grouped and written.\")) } ## data for virus:Virus1 calculated, grouped and written. ## data for virus:Virus2 calculated, grouped and written. ## data for virus:Virus3 calculated, grouped and written. ## data for virus:Virus4 calculated, grouped and written. ## data for virus:Virus5 calculated, grouped and written. ## data for virus:Virus6 calculated, grouped and written. saveWorkbook(wb,file=output_file_groupby_virus,overwrite = TRUE)"},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/articles/How_to_integrate_a_platemap.html","id":"grouping-by-condition","dir":"Articles","previous_headings":"filtering and grouping by virus or condition of interest > Grouping","what":"Grouping by condition","title":"Generate + integrate a platemap and group results.","text":"","code":"#groupby condition output_file_groupby_condition <- here::here(\"Validation/validation_output/PlatesMerged_Grouped_by_condition.xlsx\")  library(openxlsx) wb<-createWorkbook() conditions <- unique(platemap$Individual_condition) for (condition in conditions){   plates_merged_filter <- NormaliseForIC50::filter_merged(plates_merged,condition = condition)   sheetName=condition   addWorksheet(wb,sheetName=sheetName)   writeData(wb, sheet = sheetName,             x=plates_merged_filter)      print(glue::glue(\"data for condition:{condition} calculated, grouped and written.\")) } ## data for condition:patient1 calculated, grouped and written. ## data for condition:patient2 calculated, grouped and written. ## data for condition:patient3 calculated, grouped and written. ## data for condition:patient4 calculated, grouped and written. ## data for condition:patient5 calculated, grouped and written. ## data for condition:patient6 calculated, grouped and written. ## data for condition:patient7 calculated, grouped and written. ## data for condition:patient8 calculated, grouped and written. ## data for condition:patient9 calculated, grouped and written. ## data for condition:patient10 calculated, grouped and written. ## data for condition:patient11 calculated, grouped and written. ## data for condition:patient12 calculated, grouped and written. ## data for condition:patient13 calculated, grouped and written. ## data for condition:patient14 calculated, grouped and written. ## data for condition:patient15 calculated, grouped and written. ## data for condition:patient16 calculated, grouped and written. ## data for condition:patient17 calculated, grouped and written. ## data for condition:patient18 calculated, grouped and written. ## data for condition:patient19 calculated, grouped and written. ## data for condition:patient20 calculated, grouped and written. ## data for condition:patient21 calculated, grouped and written. ## data for condition:patient22 calculated, grouped and written. ## data for condition:patient23 calculated, grouped and written. ## data for condition:patient24 calculated, grouped and written. ## data for condition:patient25 calculated, grouped and written. ## data for condition:E64d calculated, grouped and written. ## data for condition:Camostat calculated, grouped and written. saveWorkbook(wb,file=output_file_groupby_condition,overwrite = TRUE)"},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/articles/introduction.html","id":"setting-up","dir":"Articles","previous_headings":"","what":"Setting up","title":"Introduction to how to use Normalisation Package","text":"load library/package github.","code":"if(!require(\"remotes\"))install.packages(\"remotes\",repos=\"http://cran.us.r-project.org\") ## Loading required package: remotes remotes::install_github(\"TKMarkCheng/NormaliseForIC50\",dependencies = TRUE, force = TRUE) ## Using github PAT from envvar GITHUB_PAT. Use `gitcreds::gitcreds_set()` and unset GITHUB_PAT in .Renviron (or elsewhere) if you want to use the more secure git credential store instead. ## Downloading GitHub repo TKMarkCheng/NormaliseForIC50@HEAD ## RcppEigen   (NA   -> 0.3.4.0.0) [CRAN] ## cpp11       (NA   -> 0.4.7    ) [CRAN] ## prettyunits (NA   -> 1.2.0    ) [CRAN] ## hms         (NA   -> 1.1.3    ) [CRAN] ## knitr       (1.46 -> 1.47     ) [CRAN] ## progress    (NA   -> 1.2.3    ) [CRAN] ## Installing 6 packages: RcppEigen, cpp11, prettyunits, hms, knitr, progress ## Installing packages into '/home/runner/work/_temp/Library' ## (as 'lib' is unspecified) ## ── R CMD build ───────────────────────────────────────────────────────────────── ## * checking for file ‘/tmp/Rtmp8U4z96/remotes19b9248a5043/TKMarkCheng-NormaliseForIC50-8195afc/DESCRIPTION’ ... OK ## * preparing ‘NormaliseForIC50’: ## * checking DESCRIPTION meta-information ... OK ## * checking for LF line-endings in source and make files and shell scripts ## * checking for empty or unneeded directories ## * building ‘NormaliseForIC50_2.1.1.tar.gz’ ## Installing package into '/home/runner/work/_temp/Library' ## (as 'lib' is unspecified)"},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/articles/introduction.html","id":"loading-sample-defining-output-file-and-plate-rotation-if-any","dir":"Articles","previous_headings":"","what":"Loading sample, defining output file, and plate rotation (if any)","title":"Introduction to how to use Normalisation Package","text":"important change following file paths settings fit data. (stored? output excel file called? plates rotated?) also important communicate plates setup, consistent folder use script . .e. don’t horizontal plates vertical plates mixed folder, positive negative controls consistent columns folder script used .","code":"input_file <- here::here(\"Validation/2022-09-04_reads/example1.xlsx\") #CHANGE to example file in your directory for troubleshooting input_directory = here::here(\"Validation/2022-09-04_reads/\") #CHANGE this to directory of input .xlsx data files output_file <- here::here(\"Validation/test.xlsx\") # CHANGE directory and name for yourself rotate_by <- 0 # clockwise degrees, multiples of 90, useful when doing 12 fold dilutions. control_neg_column <- c(1) # default negative control column is on first column from the left control_pos_column <- c(2) # default positive control column is on second column from the left"},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/articles/introduction.html","id":"getting-the-filenames-from-our-directory","dir":"Articles","previous_headings":"","what":"Getting the filenames from our directory","title":"Introduction to how to use Normalisation Package","text":"names input files?","code":"neut_raw_files <- Sys.glob(paste0(   paste0(input_directory,\"/*.xlsx\")) # find all .xlsx file in input directory ) neut_raw_files ##  [1] \"/home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation/2022-09-04_reads//example1.xlsx\"  ##  [2] \"/home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation/2022-09-04_reads//example10.xlsx\" ##  [3] \"/home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation/2022-09-04_reads//example2.xlsx\"  ##  [4] \"/home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation/2022-09-04_reads//example3.xlsx\"  ##  [5] \"/home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation/2022-09-04_reads//example4.xlsx\"  ##  [6] \"/home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation/2022-09-04_reads//example5.xlsx\"  ##  [7] \"/home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation/2022-09-04_reads//example6.xlsx\"  ##  [8] \"/home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation/2022-09-04_reads//example7.xlsx\"  ##  [9] \"/home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation/2022-09-04_reads//example8.xlsx\"  ## [10] \"/home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation/2022-09-04_reads//example9.xlsx\""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/articles/introduction.html","id":"example-case-plate-1","dir":"Articles","previous_headings":"","what":"Example case: Plate 1","title":"Introduction to how to use Normalisation Package","text":"inital view plate 1 Name assigned column can string characters, long ’s excessively weird symbols.","code":"plate1 <- NormaliseForIC50::read_promega_plate_excel(input_promega_excel_file_path = input_file) plate1 ##   neg    pos sample one sample one.1 sample two     NA sample three ## A  90 376100     182200       229100     171100 186500           80 ## B  80 277500     289200       292000     275900 245400          100 ## C 100 287200     288400       292000     278800 277700          380 ## D 110 301300     309500       301100     304800 313300        24090 ## E  50 280600     293000       286400     309400 292500        99030 ## F  90 272600     266000       289600     303000 309200       175700 ## G 100 251200     295100       286500     311100 283200       244100 ## H  50 348100     350900       345000     386400 364800       343600 ##   sample three.1      9     10     11     12 ## A             90 133200 143600  55510  96660 ## B            110 266000 269900 259500 298000 ## C            830 291200 293900 275200 327900 ## D          27390 314900 289400 314200 397400 ## E         119800 300700 322300 293400 360300 ## F         203000 302600 294500 293000 379000 ## G         239600 287200 307500 295000 372400 ## H         351700 360300 332200 350300 368300 NormaliseForIC50::final_func(neut_raw_files[1],control_neg_column = c(1),control_pos_column = c(2), rotation_deg_needed = rotate_by) ## processing input file: /home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation/2022-09-04_reads//example1.xlsx ## negative control = 83.75 ## positive control = 299325 ## Finished processing: /home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation/2022-09-04_reads//example1.xlsx ##   sample.one sample.one.1 sample.two     NA. sample.three sample.three.1 ## A     39.141       23.468     42.850  37.704      100.001         99.998 ## B      3.384        2.448      7.828  18.021       99.995         99.991 ## C      3.651        2.448      6.859   7.227       99.901         99.751 ## D     -3.400       -0.593     -1.830  -4.670       91.978         90.875 ## E      2.114        4.319     -3.367   2.281       66.934         59.993 ## F     11.136        3.250     -1.228  -3.300       41.313         32.190 ## G      1.412        4.286     -3.935   5.389       18.455         19.959 ## H    -17.235      -15.264    -29.099 -21.880      -14.796        -17.503 ##        X9     X10     X11     X12 ## A  55.515  52.040  81.478  67.726 ## B  11.136   9.833  13.309   0.443 ## C   2.715   1.813   8.062  -9.549 ## D  -5.205   3.317  -4.971 -32.775 ## E  -0.459  -7.678   1.980 -20.377 ## F  -1.094   1.612   2.114 -26.626 ## G   4.052  -2.732   1.445 -24.420 ## H -20.377 -10.986 -17.035 -23.050"},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/articles/introduction.html","id":"processing-all-the-files-in-the-directory","dir":"Articles","previous_headings":"","what":"Processing all the files in the directory","title":"Introduction to how to use Normalisation Package","text":"","code":"#create xlsx and populate df into separate sheets. CHANGE rotation_deg_needed if the plate was ROTATED when setting up. library(openxlsx) wb<-createWorkbook() for (neut_raw_file in neut_raw_files){   neut_file <- basename(neut_raw_file) #remove file path   neut_file = tools::file_path_sans_ext(neut_file) #remove extension   addWorksheet(wb,sheetName=neut_file)   writeData(wb, sheet = neut_file,             x = NormaliseForIC50::final_func(               neut_raw_file,               control_neg_column = control_neg_column,               control_pos_column = control_pos_column,               rotation_deg_needed = rotate_by))   print(paste0(\"normalised data written to:\",neut_file)) } ## processing input file: /home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation/2022-09-04_reads//example1.xlsx ## negative control = 83.75 ## positive control = 299325 ## Finished processing: /home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation/2022-09-04_reads//example1.xlsx ## [1] \"normalised data written to:example1\" ## processing input file: /home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation/2022-09-04_reads//example10.xlsx ## negative control = 77.5 ## positive control = 361125 ## Finished processing: /home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation/2022-09-04_reads//example10.xlsx ## [1] \"normalised data written to:example10\" ## processing input file: /home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation/2022-09-04_reads//example2.xlsx ## negative control = 96.25 ## positive control = 361825 ## Finished processing: /home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation/2022-09-04_reads//example2.xlsx ## [1] \"normalised data written to:example2\" ## processing input file: /home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation/2022-09-04_reads//example3.xlsx ## negative control = 96.25 ## positive control = 354575 ## Finished processing: /home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation/2022-09-04_reads//example3.xlsx ## [1] \"normalised data written to:example3\" ## processing input file: /home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation/2022-09-04_reads//example4.xlsx ## negative control = 93.75 ## positive control = 363150 ## Finished processing: /home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation/2022-09-04_reads//example4.xlsx ## [1] \"normalised data written to:example4\" ## processing input file: /home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation/2022-09-04_reads//example5.xlsx ## negative control = 91.25 ## positive control = 370775 ## Finished processing: /home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation/2022-09-04_reads//example5.xlsx ## [1] \"normalised data written to:example5\" ## processing input file: /home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation/2022-09-04_reads//example6.xlsx ## negative control = 87.5 ## positive control = 351112.5 ## Finished processing: /home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation/2022-09-04_reads//example6.xlsx ## [1] \"normalised data written to:example6\" ## processing input file: /home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation/2022-09-04_reads//example7.xlsx ## negative control = 92.5 ## positive control = 393425 ## Finished processing: /home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation/2022-09-04_reads//example7.xlsx ## [1] \"normalised data written to:example7\" ## processing input file: /home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation/2022-09-04_reads//example8.xlsx ## negative control = 101.25 ## positive control = 381600 ## Finished processing: /home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation/2022-09-04_reads//example8.xlsx ## [1] \"normalised data written to:example8\" ## processing input file: /home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation/2022-09-04_reads//example9.xlsx ## negative control = 91.25 ## positive control = 385575 ## Finished processing: /home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation/2022-09-04_reads//example9.xlsx ## [1] \"normalised data written to:example9\" saveWorkbook(wb,file=output_file,overwrite = TRUE) print(paste0(\"saved collated sheets to excel file:\",output_file)) ## [1] \"saved collated sheets to excel file:/home/runner/work/NormaliseForIC50/NormaliseForIC50/Validation/test.xlsx\""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mark Cheng. Author, maintainer. Kate Chiang. Contributor.","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cheng M (2024). NormaliseForIC50: Normalise IC50s plates, mapping mode, find normalise using plate map strict structure.. R package version 2.1.1, https://tkmarkcheng.github.io/NormaliseForIC50/.","code":"@Manual{,   title = {NormaliseForIC50: Normalise IC50s plates, and in mapping mode, find and normalise using a plate map with strict structure.},   author = {Mark Cheng},   year = {2024},   note = {R package version 2.1.1},   url = {https://tkmarkcheng.github.io/NormaliseForIC50/}, }"},{"path":[]},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/index.html","id":"pre-process-data-to-return-normalise-ic50-curves-for-direct-input-into-prism","dir":"","previous_headings":"","what":"pre-process data to return normalise IC50 curves for direct input into PRISM","title":"Normalise IC50s plates, and in mapping mode, find and normalise using a plate map with strict structure.","text":"script automates normalization process neutralization assays performed 96-well plate read Promega system, generally, serial dilution results columns/rows negative positive controls.  script achieved perfect concordance normalization PRISM (R=1.0, ρ<2.2e-16). INPUT: script currently reads .xlsx file outputs Promega given directory. OUTPUT: 0 100 normalized data sheets collated .xlsx file can imported/copied pasted back PRISM IC50 curve fitting.","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Normalise IC50s plates, and in mapping mode, find and normalise using a plate map with strict structure.","text":"Install github using devtools.","code":"install.packages(\"devtools\") # if you have not installed \"devtools\" package devtools::install_github(\"TKMarkCheng/NormaliseForIC50\")"},{"path":[]},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/index.html","id":"method-1","dir":"","previous_headings":"","what":"Method 1","title":"Normalise IC50s plates, and in mapping mode, find and normalise using a plate map with strict structure.","text":"loaded onto R via detailed tutorial available vignettes/introduction.html. - important change input_file, input_directory, output_file path names .","code":"if(!require(\"remotes\"))install.packages(\"remotes\",repos=\"http://cran.us.r-project.org\") remotes::install_github(\"TKMarkCheng/NormaliseForIC50\",dependencies = TRUE, force = TRUE)"},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/index.html","id":"method-2","dir":"","previous_headings":"","what":"Method 2","title":"Normalise IC50s plates, and in mapping mode, find and normalise using a plate map with strict structure.","text":"Clone/Download github repository. Move Promega read .xlsx files folder (input_directory) input_directory=folder made step 2 keep Promega read .xlsx files input_file=file input_directory sanity check. output_file=want name new Excel file (default=test.xlsx) Run normalisation.R start finish","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/index.html","id":"rotated-plate","dir":"","previous_headings":"","what":"Rotated Plate","title":"Normalise IC50s plates, and in mapping mode, find and normalise using a plate map with strict structure.","text":"Rotation defaults 0 (A1 top left corner).  cases plate accidentally rotated, vertical serial dilution performed, can clockwise rotate read orientation multiple 90° changing rotate_by.","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/index.html","id":"automatic-detection-of-anomalies","dir":"","previous_headings":"","what":"Automatic detection of anomalies","title":"Normalise IC50s plates, and in mapping mode, find and normalise using a plate map with strict structure.","text":"Thanks helpful summer student Kate","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/index.html","id":"proof-of-work---validation","dir":"","previous_headings":"","what":"Proof of work - Validation","title":"Normalise IC50s plates, and in mapping mode, find and normalise using a plate map with strict structure.","text":"Validation set 10 plates. details can seen Validation directory.","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/index.html","id":"using-a-plate-map","dir":"","previous_headings":"","what":"Using a Plate Map","title":"Normalise IC50s plates, and in mapping mode, find and normalise using a plate map with strict structure.","text":"detailed tutorial available vignettes/How_to_integrate_a_platemap.html ’re using modifying prior made plate map, strict format platemap specified Validation/validation_output/example_generated_platemap_manual_changes.xlsx must followed.","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/index.html","id":"common-issues","dir":"","previous_headings":"","what":"Common issues","title":"Normalise IC50s plates, and in mapping mode, find and normalise using a plate map with strict structure.","text":"Need close () excel file target directory R able read .","code":"Error in utils::unzip(zip_path, list = TRUE) : zip file '\\~$.xlsx' cannot be opened`"},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/filter_merged.html","id":null,"dir":"Reference","previous_headings":"","what":"filter_merged — filter_merged","title":"filter_merged — filter_merged","text":"Filters dataframe conditions virus","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/filter_merged.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"filter_merged — filter_merged","text":"","code":"filter_merged(plates_merged, condition = NULL, virus = NULL)"},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/filter_merged.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"filter_merged — filter_merged","text":"plates_merged dataframe merged normalised plates condition inidividual test condition want filter , can single string, list. \"AZ12\" virus virus want filter . Can single string, list. e.g. c(\"Virus1\",\"VIrus2\")","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/filter_merged.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"filter_merged — filter_merged","text":"filtered dataframe normalised values.","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/final_func.html","id":null,"dir":"Reference","previous_headings":"","what":"Strings all functions together. — final_func","title":"Strings all functions together. — final_func","text":"Strings functions together.","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/final_func.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Strings all functions together. — final_func","text":"","code":"final_func(   neut_xlsx_path,   control_neg_column = c(1),   control_pos_column = c(2),   sheetname = \"Results\",   rotation_deg_needed = 0,   cluster = FALSE )"},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/final_func.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Strings all functions together. — final_func","text":"neut_xlsx_path file normalise, default negative control left column, positive control second left column. control_neg_column column negative/cell control located (column number left, integer,default=1) control_pos_column column positive/cell control located (column number left, integer,default=2) sheetname sheet .xlsx file read, default promega excel file \"Results\" rotation_deg_needed degrees dataframe needs rotated, default=0. Feeds rotate.R cluster k-clusters dependent anomaly detection invoked, default=FALSE. Feed normalise.R","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/final_func.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Strings all functions together. — final_func","text":"rotated, normalised dataframe negative positive control columns removed.","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/k_clustering.html","id":null,"dir":"Reference","previous_headings":"","what":"install.packages(","title":"install.packages(","text":"install.packages(\"Ckmeans.1d.dp\") select k-cluster mean closest mean first last rows without outliers","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/k_clustering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"install.packages(","text":"","code":"k_clustering(   control_column,   lim,   type = c(\"negative\", \"positive\"),   na.rm = TRUE )"},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/mean_without_outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove the outliers from your first and last rows (upper and lower bounds) and find the mean Define numeric_vector — mean_without_outliers","title":"Remove the outliers from your first and last rows (upper and lower bounds) and find the mean Define numeric_vector — mean_without_outliers","text":"Remove outliers first last rows (upper lower bounds) find mean Define numeric_vector","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/mean_without_outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove the outliers from your first and last rows (upper and lower bounds) and find the mean Define numeric_vector — mean_without_outliers","text":"","code":"mean_without_outliers(numeric_vector, num_sd = 2)"},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/normalise.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads in dataframe of Promega data, and normalise. — normalise","title":"Reads in dataframe of Promega data, and normalise. — normalise","text":"function assumes left row cell/negative control, second column left virus/positive control.","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/normalise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads in dataframe of Promega data, and normalise. — normalise","text":"","code":"normalise(   df,   control_neg_column = c(1),   control_pos_column = c(2),   cluster = FALSE,   filename = \"\" )"},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/normalise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads in dataframe of Promega data, and normalise. — normalise","text":"df dataframe normalise, left column negative control, second left column positive control. control_neg_column column(s) negative/cell control located (column number left, integer) control_pos_column column(s) positive/cell control located (column number left, integer) cluster Experimental feature - uses k-means clustering detect exclude anomalies negative positive control (default = FALSE)","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/normalise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads in dataframe of Promega data, and normalise. — normalise","text":"normalised dataframe negative positive control columns removed.","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/plate_map_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in and validates, or generate PlateMap following strict formatting as Example_PlateMap.xlsx — plate_map_functions","title":"Read in and validates, or generate PlateMap following strict formatting as Example_PlateMap.xlsx — plate_map_functions","text":"Validates PlateMap checking unexpected missing columns, missing columns, adding .","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/plate_map_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in and validates, or generate PlateMap following strict formatting as Example_PlateMap.xlsx — plate_map_functions","text":"","code":"expected_columns  validate_plate_map(df, plateMap_file, read_mode = \"default\")  read_validate_plate_map(plateMap_file, sheet = \"Sheet1\")  find_promega_plate_paths(directory_of_files)  get_read_date(promega_excel_file)  generate_plate_map(   directory_of_files = \"Validation/\",   output_plateMap_file = \"Validation/generated_platemap.xlsx\",   output_mode = \"return\" )"},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/plate_map_functions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Read in and validates, or generate PlateMap following strict formatting as Example_PlateMap.xlsx — plate_map_functions","text":"object class character length 11.","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/plate_map_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in and validates, or generate PlateMap following strict formatting as Example_PlateMap.xlsx — plate_map_functions","text":"df read platemap dataframe plateMap_file filepath used generate df. validate function required reading writing make sure expected_columns included. read_mode \"default\" silently adds missing column \"debug\" invoked provides warning missing/unexpected columns. sheet sheet wanted PlateMap resides plateMap_file directory_of_files directory_of_files iterated look Promega output files generated output_plateMap_file. promega_excel_file promega .xlsx file intact metadata (first sheet). output_plateMap_file filepath generated PlateMap located. output_mode \"return\" return dataframe variable, \"write\" write excel file defined output_plateMap_file","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/plate_map_functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in and validates, or generate PlateMap following strict formatting as Example_PlateMap.xlsx — plate_map_functions","text":"dataframe, excel file Wells prepared two additional columns. 1) file path plates, 2) file creation date corresponds read date.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/plate_map_onto_plate.html","id":null,"dir":"Reference","previous_headings":"","what":"map a single plate_map to a read promega_plate — plate_map_onto_plate","title":"map a single plate_map to a read promega_plate — plate_map_onto_plate","text":"repeated experiment columns, give suffix indicate number technical replicates, importantly prevent automatic suffix addition R prevent unexpected results. acts daughter function plate_map_onto_plate also can act stand alone function. validate columns neg, pos, samples now treat unique virus suffix set, normalise.","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/plate_map_onto_plate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"map a single plate_map to a read promega_plate — plate_map_onto_plate","text":"","code":"adding_technical_replicate_suffix(mapped_plate)  plateMap_map_onto_promega_read(plate_map, promega_read_values)  validate_columns(columns)  convert_dilution_factor(dilution_factor_string = \"1 in 3\")  generate_dilution_series(   Starting_Dilution_or_concentration = 20,   num_steps = 8,   dilution_factor = \"1 in 3\",   titration_mode = c(\"dilution\", \"concentration\") )  normalise_plate_using_plateMap(   plate_map = plate1_map,   processed_read_values_with_tech_rep )"},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/plate_map_onto_plate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"map a single plate_map to a read promega_plate — plate_map_onto_plate","text":"mapped_plate dataframe values columns assigned may repeated columns plate_map platemap strict platemap format promega_read_values promega_plate_df generated read_promega_plate_xlsx.R , specified, plate_map column promega_plate_path searched columns Negative_Control_Column, Positive_Control_Column, column plate map, can strings like \"5,6\" processing experiment columns summarises dilution_factor_string dilution formatted numerator denominator (e.g. 1 3) Starting_Dilution_or_concentration starting dilution concentration (unitless) num_steps Number dilution rows including neat dilution_factor dilution formatted numerator denominator (e.g. 1 3) titration_mode dilution, numbers get bigger, concentration, numbers get smaller processed_read_values_with_tech_rep output plateMap_map_onto_promega_read","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/plate_map_onto_plate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"map a single plate_map to a read promega_plate — plate_map_onto_plate","text":"dataframe values _techrepn suffixed, prevents repeated column names. normalized values , <dilution_or_concentration>, <dilution_serie> plate_map validated version list integers numeric dilution_factor comma-separated string dilution_series validated version list integers","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/read_promega_plate_excel.html","id":null,"dir":"Reference","previous_headings":"","what":"Reading in Promega plate data, from the excel sheet format. — read_promega_plate_excel","title":"Reading in Promega plate data, from the excel sheet format. — read_promega_plate_excel","text":"function loads Promega system generated excel sheet 8x12 matrix whilst keeping column row names.","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/read_promega_plate_excel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reading in Promega plate data, from the excel sheet format. — read_promega_plate_excel","text":"","code":"read_promega_plate_excel(input_promega_excel_file_path, sheetname = \"Results\")"},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/read_promega_plate_excel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reading in Promega plate data, from the excel sheet format. — read_promega_plate_excel","text":"input_promega_excel_file_path Path input file sheetname sheetname result recorded Promega file. \"Results\" manually changed.","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/read_promega_plate_excel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reading in Promega plate data, from the excel sheet format. — read_promega_plate_excel","text":"8x12 data.frame rownames column headers","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/rotate.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs clockwise rotations (0,90,180,270 degrees) — rotate","title":"Performs clockwise rotations (0,90,180,270 degrees) — rotate","text":"function rotates data.frame size 0 (rotation), 90, 180, 270 degrees clockwise.","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/rotate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs clockwise rotations (0,90,180,270 degrees) — rotate","text":"","code":"rotate(df, rotation_deg_needed = 0)"},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/rotate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs clockwise rotations (0,90,180,270 degrees) — rotate","text":"df dataframe rotate rotation_deg_needed many degrees clockwise rotated (default=0 (rotation), 90, 180, 270)","code":""},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/reference/rotate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs clockwise rotations (0,90,180,270 degrees) — rotate","text":"dataframe rotated rotation_deg_needed degrees clockwise","code":""},{"path":[]},{"path":[]},{"path":"https://tkmarkcheng.github.io/NormaliseForIC50/news/index.html","id":"major-changes-2-0-0","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"NormaliseForIC50 2.0.0","text":"Created set functions facilitate 1) generation, 2) validation 3) mapping strictly formatted platemaps (#8) describes neutralisation files one folder (subfolders). platemaps can used get normalised values can grouped together. Vignette How_to_integrate_a_platemap.Rmd created walk process. Using formal documentation style using usethis, pkgdown","code":""}]
